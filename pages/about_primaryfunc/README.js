Ext.data.JsonP.about_primaryfunc({
    "guide": [
        '<h1>主要機能</h1>',
        '<p>Next JSの主な機能として次の4つの機能があげられます。</p>',
        '<img src="pages/about_primaryfunc/images/primaryfunction.png" />',
        '<ul>',
        '<li>Webサーバー機能</li>',
        '<li>フレームワーク機能</li>',
        '<li>クラスシステム機能</li>',
        '<li>ライブラリ機能</li>',
        '</ul>',

        '<h2>Webサーバー機能</h2>',
        '<p>',
        'nodeには、http/httpsモジュールが用意されており、自分で任意のポートをリスンしてWebサーバーを実装することができます。',
        'PHPやPerlなどCGI的な動作を期待してnodeをさわり始めたユーザーは、まずApacheからどのように実行されるのか？など、Webサーバーがある前提で考える方も少なくはないでしょう。',
        'nodeはJavaScriptという言語をV8 JavaScript Engineで実行するプラットフォームで、Webサーバー機能は、Apacheと連動させる（自前で）か、自分でWebサーバーを実装する必要があります。',
        'もちろん、その場合HTTPヘッダーからPOSTやGETの値の取得など、PHPの場合だと<em>$_POST</em>などで簡単に取得できていたことさえも、自分で実装する必要があります。',
        'ブラウザに返すレスポンスコードから、セッションの実装までもです。',
        '</p>',
        '<p>',
        'これでは、nodeを使ってWebアプリケーションを作成しよう！と意気込んでも、ミイラ取りがミイラになることになります。',
        'Next JSは、このWebサーバー機能を標準で提供します。',
        'ドキュメント内で詳しく説明しますが、先ほどのPHPでいう<em>$_POST</em>のようにリクエストされた情報を簡単に扱うことができる仕組みを提供します。',
        '</p>',

        '<h2>フレームワーク機能</h2>',
        '<p>',
        'Next JSは、ただWebサーバーを実装したものではありません。',
        '単純なWebサーバーとして機能しますが、さらにアプリケーションフレームワーク機能を提供します。',
        'Webサーバーで表示する1ページ、1ページを<em>VirtualScreen(仮想スクリーン)</em>として作成（単純に何も配置されていなくても、アクセスしたファイル名が仮想スクリーンです）し、',
        '仮想スクリーンに対して、アクション（処理）を挟み込んでいきます。',
        '</p>',
        '<p>',
        'アクションは、ビジネスロジックを<em>モジュール</em>というクラスに分割して呼び出すことができます。',
        'モジュールは単純にビジネスロジックを格納するだけではなく、データベースと連動させることができます。',
        'さらに、処理を終えた後にHTMLなどをブラウザに返却する必要がありますが、このHTMLをテンプレートとして扱うことができます。',
        'テンプレートの記述方法は、PHPの有名なテンプレートエンジンである<a href="http://www.smarty.net/">Smarty</a>に準拠して作成されています。',
        '</p>',
        '<p>',
        'このように、Next JSは、<em>Model-View-Controller(MVC)</em>という形式のフレームワーク機能を提供いたします。',
        '</p>',

        '<h2>クラスシステム機能</h2>',
        '<p>',
        'JavaやPHPのようにJavaScriptはprototypeベース言語ですので、classというキーワードを利用してクラスを作成することが、現在はできません。',
        'もちろん、<em>クラス</em>という考え方は、どの言語でも適用可能ですが、JavaScriptでこのクラスを実現する場合、いくつか手法があります。',
        '関数オブジェクト(function)を使って、new演算子で新しいオブジェクトを生成することで、ある意味、<em>関数オブジェクトはコンストラクタである</em>',
        'ともいえます。',
        'そして、関数オブジェクト内部にメンバーを作成していくことで、確かにクラスを作成することは可能ですし、',
        'node標準の<em>util.inherits</em>を利用することで、継承関係を作成することも可能です。',
        'Next JSでは、<a href="http://www.sencha.com/blog/countdown-to-ext-js-4-dynamic-loading-and-new-class-system">Ext JS 4で導入された新しいクラスシステム</a>を導入して',
        'Ext JS 4ライクにクラスを定義することができます。',
        '</p>',
        '<p>',
        'さらに、Next JSでは、NX.Loaderというクラスを実装していて、クラスを動的にロードする仕組みも装備されています。',
        '従って、クラス名がディレクトリ名に対応し、自動的に読み込まれるような仕組みが、最初から利用できるのです。',
        '継承やmixinは、もちろん、継承やmixin、さらには利用するクラスのプリロードも自動的に行ってくれます。',
        'これにより、nodeのrequireを自分で直接読み込むような機会は少なくなるでしょう。',
        '先ほど紹介した、フレームワーク機能で利用する、アクションや、モジュールでこの機能が利用できます。',
        '</p>',

        '<h2>ライブラリ機能</h2>',
        '<p>',
        'Next JSは、Webサーバー経由だけではなく、コマンドラインからも実行できます。',
        'このとき、アクション名を指定してモジュールを動作させて実行するような、Webサーバー経由の実行と同じことがコマンドラインから行えます。',
        'この、Webサーバー経由の動作、コマンドラインの動作、両方で利用できる便利なクラス群を提供します。',
        '</p>',
        '<p>',
        '例えば、markdownを最初から利用できたり、テンプレートエンジン機能を個別に利用することもできます。',
        'さらに、ユーザーエージェント文字列を利用して機種や、環境を判別する仕組みも利用することができます。',
        '今後、Next JSのバージョンアップに伴い、このライブラリ機能も充実していきます。',
        '</p>',
        '<p>',
        'そう遠くない未来に、PDF出力やExcel出力、さらには、Ext JSとの連携は既にExt Directで完成していますが、',
        'Ext JS 4で導入されたSVGベースのチャート機能とPDFやExcelとの連動など、業務アプリケーションを作成するに必要なライブラリを標準で提供することを',
        '目標に進化し続けます。',
        '</p>',
        '<address>Copyright &copy; 2006 - 2011 <a href="http://www.xenophy.com/">Xenophy.CO.,LTD</a> All rights Reserved.</address>',

    ].join("")
});
