Ext.data.JsonP.tutorial_module({
    "guide": [

        '<h1>モジュールの利用</h1>',
        '<p>',
        'ここまで学んだ内容で、Webアプリケーションを作っていくことは可能ですが、',
        'そうすると、画面の制御やビジネスロジックを、すべてアクション内に記述することになってしまいます。',
        'Next JSでは、リクエストされた情報によりどのような処理を行うかの判定までは、アクションで行うこととし、',
        'ビジネスロジックは、モジュールといわれる仕組みで処理することを推奨しています。',
        'せっかくモジュールが使えても、アクションにビジネスロジックを書き込んでしまうと、',
        '再利用性が失われるだけでなく、コントローラーファット(Controller Fat)な状態になり',
        'メンテナンス性の低いコードになってしまいます。',
        '</p>',

        '<h2>モジュールの作成</h2>',
        '<p>',
        'モジュールは、<em>modules</em>ディレクトリに配置します。',
        '</p>',

        '<h4>modules/logic.js</h4>',
        '<pre>',
        'module.exports = {' + "\n",
        '    useTable: <span style="color:#000099;">false</span>,' + "\n",
        '    member1: <span style="color:#000099;">function</span>() {' + "\n",
        '        <span style="color:#000099;">return</span> <span style="color:#009900;">\'Call logic.member1.\'</span>;' + "\n",
        '    },' + "\n",
        '    member2: <span style="color:#000099;">function</span>() {' + "\n",
        '        <span style="color:#000099;">return</span> <span style="color:#009900;">\'Call logic.member2.\'</span>;' + "\n",
        '    }' + "\n",
        '};',
        '</pre>',

        '<p>',
        'アクションのように、<em>module.exports</em>にオブジェクトリテラルで定義します。',
        '<em>userTable:false</em>については、ここではおまじないだと思ってください。',
        '</p>',

        '<h2>アクションでのモジュール設定</h2>',
        '<p>',
        'モジュールの定義は終わりました。<em>logic</em>というモジュールが配置されています。',
        'このモジュールを利用したいアクションで使うことを宣言します。',
        'モジュール利用宣言は、<em>uses</em>キーに配列で設定します。',
        'usesで設定を行うと、this[モジュール名]でアクセスすることができるようになり、',
        'ここでは、logicモジュールのメンバーを呼び出すことができます。',
        '</p>',

        '<h4>actions/index.js</h4>',
        '<pre>',
        'module.exports = [{' + "\n",
        '    uses: [<span style="color:#009900;">\'logic\'</span>],' + "\n",
        '    execute: <span style="color:#000099;">function</span>() {' + "\n",
        '        <span style="color:#000099;">this</span>.<span style="color:#000099;">set</span>(<span style="color:#009900;">\'mod1ret\'</span>, <span style="color:#000099;">this</span>.logic.member1());' + "\n",
        '        <span style="color:#000099;">this</span>.<span style="color:#000099;">set</span>(<span style="color:#009900;">\'mod2ret\'</span>, <span style="color:#000099;">this</span>.logic.member2());' + "\n",
        '        <span style="color:#000099;">this</span>.end();' + "\n",
        '    }' + "\n",
        '}];',
        '</pre>',

        '<p>',
        'logicモジュールのメンバーは、今回同期的な処理しかないため、単純に戻り値を受け取るだけになっています。',
        'しかしながら、実際にはファイル操作やデータベース操作を行うと、コールバック関数を利用して非同期に処理する必要がでてきます。',
        'その場合は、モジュールメソッドの引数にコールバック関数を設定し、モジュールメソッド側で処理終了時にコールバック関数を呼び出すことで、',
        'アクションの処理に戻すことができます。',
        'もちろん、アクション側でthis.endなど、アクション終了を通知するメソッドを呼び出すのはコールバック関数内で処理します。',
        '</p>',

        '<h2>データベース接続</h2>',
        '<p>',
        'Next JSでデータベースへ接続するには、モジュールを利用します。',
        'モジュール名=テーブル名という考え方で、モジュールをテーブル単位のアクセスと考え操作するO/Rマッパーが実装されています。',
        '</p>',

        '<p style="color:red">',
        'バージョン0.8.1では、MySQLへの接続のみであるとともに、アソシエーションなどO/Rマッパーは実装されていませんがデータベースへのアクセスは可能です。',
        '</p>',

        '<h3>データベース接続設定</h3>',
        '<p>',
        '何はともあれ、Next JSでは、データベースへ接続する情報を直接アクションやモジュールに記述することは、',
        '直接データベースオブジェクトを操作することがない限りありません。',
        '<em>コネクション</em>という単位で接続情報を先に定義し、どのコネクションを利用してモジュールがデータベースへ接続するのかを指定します。',
        '</p>',

        '<h3>コネクション定義</h3>',
        '<p>',
        'コネクションの定義は、<em>configs/database.js</em>で行います。',
        'ここでは、ローカルホストでMySQLが稼働している前提で設定を行います。',
        '</p>',

        '<h4>configs/database.js</h4>',
        '<pre>',
        'module.exports = {' + "\n",
        '    <span style="color:#000099;">default</span>: {' + "\n",
        '        adapter: <span style="color:#009900;">\'mysql\'</span>,' + "\n",
        '        host: <span style="color:#009900;">\'localhost\'</span>,' + "\n",
        '        user: <span style="color:#009900;">\'root\'</span>,' + "\n",
        '        password: <span style="color:#009900;">\'\'</span>,' + "\n",
        '        database: <span style="color:#009900;">\'nextjs\'</span>,' + "\n",
        '        port: <span style="color:#009900;">\'3306\'</span>' + "\n",
        '    }' + "\n",
        '};',
        '',
        '</pre>',

        '<p style="color:red">',
        '今後adapterキーにmysql以外に、pgsqlやoracle、mongoが指定できるようになる予定です。',
        '</p>',

        '<p>',
        'ここでは、<em>default</em>というキーに対して接続設定を定義しました。',
        'モジュール利用の定義(usesの設定時)に、モジュールだけでなくコネクションも同時に設定することができます。',
        'しかし、先ほどのようにモジュールをテキストで指定すると、接続設定は<em>default</em>が自動的に利用されます。',
        '</p>',

        '<h3>データベース接続モジュール作成</h3>',
        '<p>',
        'データベースへ接続できる環境は整いました。',
        '早速データベースへ接続してレコードを取得するようなモジュールを作成しましょう。',
        '接続するテーブルは次のようになっています。',
        '</p>',

        '<h4>users</h4>',
        '<pre>',
        'CREATE TABLE `users` (' + "\n",
        '  `id` bigint(<span style="color:#009900;">20</span>) NOT NULL,' + "\n",
        '  `name` varchar(<span style="color:#009900;">255</span>) NOT NULL,' + "\n",
        '  PRIMARY KEY (`id`)' + "\n",
        ') ENGINE=MyISAM DEFAULT CHARSET=utf8;' + "\n",
        '</pre>',

        '<p>',
        '先ほど作成したlogicというモジュールを次のように変更します。',
        '</p>',

        '<h4>modules/logic.js</h4>',
        '<pre>',
        'module.exports = {' + "\n",
        '    getUsers: <span style="color:#000099;">function</span>(fn) {' + "\n",
        '        <span style="color:#000099;">this</span>.query(<span style="color:#009900;">&quot;SELECT * FROM users;&quot;</span>, <span style="color:#000099;">function</span>(err, rs) {' + "\n",
        '            fn(rs);' + "\n",
        '        });' + "\n",
        '    }' + "\n",
        '};',
        '</pre>',

        '<p>',
        'さらに、モジュールの呼び出し側である、index.jsを次のようにします。',
        '</p>',

        '<h4>actions/index.js</h4>',
        '<pre>',
        'module.exports = [{' + "\n",
        '    uses: [\'logic\'],' + "\n",
        '    execute: function() {' + "\n",
        '        var me = this;' + "\n",
        '        me.logic.getUsers(function(rs) {' + "\n",
        '            me.set(\'users\', rs);' + "\n",
        '            me.end();' + "\n",
        '        });' + "\n",
        '    }' + "\n",
        '}];',
        '</pre>',

        '<h4>public/index.html</h4>',
        '<pre>',
        '<span style="color:#0000FF;">&lt;ul&gt;</span>' + "\n",
        '    <span style="color:#990000;">&lt;!--{foreach from=users item=item key=key}--&gt;</span>' + "\n",
        '    <span style="color:#0000FF;">&lt;li&gt;</span><span style="color:#990000;">&lt;!--{item.id}--&gt;</span> : <span style="color:#990000;">&lt;!--{item.name}--&gt;</span><span style="color:#0000FF;">&lt;/li&gt;</span>' + "\n",
        '    <span style="color:#990000;">&lt;!--{/foreach}--&gt;</span>' + "\n",
        '<span style="color:#0000FF;">&lt;/ul&gt;</span>',
        '</pre>',

        '<p>',
        'モジュールでテーブルから取得したレコードセットオブジェクトをテンプレートに引き渡し、',
        'テンプレートエンジンを利用してレコード分ユーザー情報を表示しています。',
        '</p>',

        '<h4>actions/index.js</h4>',
        '<pre>',
        'module.exports = [{' + "\n",
        '    uses: [{' + "\n",
        '        name: <span style="color:#009900;">\'logic\'</span>,' + "\n",
        '        conn: <span style="color:#009900;">\'default\'</span>' + "\n",
        '    }],' + "\n",
        '    execute: <span style="color:#000099;">function</span>() {' + "\n",
        '        <span style="color:#000099;">var</span> me = <span style="color:#000099;">this</span>;' + "\n",
        '        me.logic.getUsers(<span style="color:#000099;">function</span>(rs) {' + "\n",
        '            me.<span style="color:#000099;">set</span>(<span style="color:#009900;">\'users\'</span>, rs);' + "\n",
        '            me.end();' + "\n",
        '        });' + "\n",
        '    }' + "\n",
        '}];',
        '</pre>',

        '<p>',
        'usesに文字列でモジュール名を設定するのではなく、オブジェクトのnameキーにモジュール名を設定、',
        'そして、connキーに文字列でコネクション名を明示的に設定することもできます。',
        '</p>',

        '<address>Copyright &copy; 2006 - 2011 <a href="http://www.xenophy.com/">Xenophy.CO.,LTD</a> All rights Reserved.</address>',

        ].join("")
    });
